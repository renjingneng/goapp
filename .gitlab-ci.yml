before_script:
  - echo "[NORMAL]通用-开始初始化"
  # 只能修改这里的，其他勿动！！！ start
  - export BIZ_NAME=pstat
  - export EXE_NAME=web
  # 只能修改这里的，其他勿动！！！ end
  # 设置当前编译需要的环境变量
  - export OUT_DIR_PROD=/data1/vhosts/goapp/htdocs
  - export OUT_DIR_DEV=/data1/vhosts/goapp_bch/htdocs
  - export APP_NAME=stat.leju.com
  - go env -w GO111MODULE=on
  - go env -w GOPROXY=https://goproxy.cn,https://gocenter.io,https://goproxy.io,direct
  - go env -w GOPRIVATE=gitlab.leju.com
  - git config --global url."git@gitlab.leju.com:".insteadof "https://gitlab.leju.com/"
  # 初始化
  - pwd
  - export EXE_DIR_NAME=${BIZ_NAME}
  - export EXE_DIR_PROD=${OUT_DIR_PROD}/${APP_NAME}/${EXE_DIR_NAME}
  - export EXE_DIR_DEV=${OUT_DIR_DEV}/${APP_NAME}/${EXE_DIR_NAME}
  - echo $EXE_DIR_DEV
  - echo $EXE_DIR_PROD
  - if [ ! -d "${EXE_DIR_PROD}" ]; then
    mkdir -p "${EXE_DIR_PROD}";
    fi
  - if [ ! -d "${EXE_DIR_DEV}" ]; then
    mkdir -p "${EXE_DIR_DEV}";
    fi
  - echo "[NORMAL]通用-初始化完成"
# stages
stages:
  - test
  - build
  - deploy
# 测试线
job_bch_test:
  stage: test
  tags:
    - runner_bch
  script:
    - echo "[NORMAL]测试线-测试完成"
  only:
    - /^ci-dev.*$/
job_bch_build:
  stage: build
  tags:
    - runner_bch
  script:
    - echo "[NORMAL]测试线-开始编译"
    - cp -r ./${BIZ_NAME}/config/dev.json ./${BIZ_NAME}/config/local.json
    - cp -r ./${BIZ_NAME}/config ${EXE_DIR_DEV}
    - if [  -d "./${BIZ_NAME}/templates" ]; then
      cp -r ./${BIZ_NAME}/templates ${EXE_DIR_DEV};
      fi
    - go build ./${BIZ_NAME}/entrance/${EXE_NAME}.go
    - mv ./${EXE_NAME}  ${EXE_DIR_DEV}/${EXE_NAME}
    - echo "[NORMAL]测试线-编译完成"
  only:
    - /^ci-dev.*$/
job_bch_deploy:
  stage: deploy
  tags:
    - runner_bch
  script:
    - echo "[NORMAL]测试线-开始部署"
    - cd ${OUT_DIR_DEV}/${APP_NAME}
    - ls -l
    - ls -l ${BIZ_NAME}
    - echo "[NORMAL]测试线-部署完成"
  only:
    - /^ci-dev.*$/
# 正式线
job_test:
  stage: test
  tags:
    - runner
  script:
    - echo "[NORMAL]正式线-测试完成"
  only:
    - /^ci-prod.*$/
job_build:
  stage: build
  tags:
    - runner
  script:
    - echo "[NORMAL]正式线-开始编译"
    - cp -r ./${BIZ_NAME}/config/prod.json ./${BIZ_NAME}/config/local.json
    - cp -r ./${BIZ_NAME}/config ${EXE_DIR_PROD}
    - if [  -d "./${BIZ_NAME}/templates" ]; then
      cp -r ./${BIZ_NAME}/templates ${EXE_DIR_PROD};
      fi
    - go build ./${BIZ_NAME}/entrance/${EXE_NAME}.go
    - mv ./${EXE_NAME}  ${EXE_DIR_PROD}/${EXE_NAME}
    - echo "[NORMAL]正式线-编译完成"
  only:
    - /^ci-prod.*$/
job_deploy:
  stage: deploy
  tags:
    - runner
  script:
    - echo "[NORMAL]正式线-开始部署"
    - cd ${OUT_DIR_PROD}/${APP_NAME}
    - ls -l
    - ls -l ${BIZ_NAME}
    - echo "[NORMAL]正式线-部署完成"
  only:
    - /^ci-prod.*$/